plugins {
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'fabric-loom' version '0.11-SNAPSHOT'
    id 'java'
}

group 'com.github.retroPacifist'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    shadow(project(":vanilla"))
    shadow 'com.eliotlash.molang:molang:18'
    shadow 'com.eliotlash.mclib:mclib:18'
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

loom {
    runs {
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("run")
        }

        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")
        }
    }
}

java {
    withSourcesJar()
}

jar {
    dependsOn(shadowJar)
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

shadowJar {
    configurations = [project.configurations.shadow]
    classifier "shadow"
}

remapJar {
    input.set(shadowJar.archivePath)
}